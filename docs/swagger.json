{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contacts app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of Contacts app"
  },
  "tags": [
    {
      "name": "Contacts",
      "description": "Operations about contacts."
    }
  ],
  "servers": [
    {
      "url": "https://nodejs-hw-mongodb-yi7w.onrender.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get all contacts",
        "operationId": "getAllContacts",
        "description": "Повертає список контактів користувача з опціональною фільтрацією, пагінацією та сортуванням.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "isFavourite",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Фільтрація за статусом \"улюблений\""
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Номер сторінки для пагінації"
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "Кількість елементів на сторінці"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "_id",
                "name",
                "email",
                "phoneNumber",
                "contactType",
                "isFavourite",
                "createdAt",
                "updatedAt"
              ]
            },
            "description": "Поле для сортування"
          },
          {
            "name": "sortOrder",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Порядок сортування"
          }
        ],
        "responses": {
          "200": {
            "description": "Контакти успішно отримано",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "data",
                        "page",
                        "perPage",
                        "totalItems",
                        "totalPages",
                        "hasNextPage",
                        "hasPreviousPage"
                      ],
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/paths/~1contacts~1%7BcontactId%7D/patch/requestBody/content/multipart~1form-data/schema"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 1
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 35
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 4
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access token expired"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Server error occurred"
                    },
                    "data": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create contact",
        "operationId": "createContact",
        "description": "Create a contact with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType",
                  "userId"
                ],
                "properties": {
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "example.ilia@gmail.com"
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "number",
                    "example": 380696396654
                  },
                  "isFavourite": {
                    "description": "Whether is contact favourite",
                    "type": "boolean",
                    "example": false
                  },
                  "photo": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/paths/~1contacts~1%7BcontactId%7D/patch/requestBody/content/multipart~1form-data/schema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get contact by id",
        "operationId": "getContact",
        "description": "Get contact by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get contact by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/paths/~1contacts~1%7BcontactId%7D/patch/requestBody/content/multipart~1form-data/schema"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update a contact by id",
        "operationId": "updateContact",
        "description": "Оновлює інформацію про існуючий контакт за його ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "description": "Унікальний ідентифікатор контакту",
            "schema": {
              "type": "string",
              "example": "60d21b4667d0d8992e610c85"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "_id",
                  "name",
                  "phoneNumber",
                  "contactType",
                  "userId"
                ],
                "properties": {
                  "_id": {
                    "description": "Contact's id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  },
                  "name": {
                    "description": "Contact's name",
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "Contact's email",
                    "type": "string",
                    "example": "example.ilia@gmail.com"
                  },
                  "phoneNumber": {
                    "description": "Contact's phone number",
                    "type": "string",
                    "example": 380696396654
                  },
                  "contactType": {
                    "description": "Contact's type",
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ]
                  },
                  "isFavourite": {
                    "description": "Whether is contact favourite",
                    "type": "boolean",
                    "example": false
                  },
                  "photo": {
                    "description": "Link to contact's photo",
                    "type": "string",
                    "example": "https://res.cloudinary.com/djlk9nrbb/image/upload/v1749488121/j5f76ezdzo5bbzxdjg583v.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Контакт успішно оновлено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/paths/~1contacts~1%7BcontactId%7D/patch/requestBody/content/multipart~1form-data/schema"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid request data"
                    },
                    "data": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "data": {
                      "type": "null"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/paths/~1contacts/get/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact by id",
        "operationId": "deleteContact",
        "description": "Видаляє контакт за заданим ідентифікатором.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "description": "Унікальний ідентифікатор контакту",
            "schema": {
              "type": "string",
              "example": "60d21b4667d0d8992e610c85"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Контакт успішно видалено (без тіла відповіді)"
          },
          "400": {
            "$ref": "#/paths/~1contacts~1%7BcontactId%7D/patch/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1contacts/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1contacts~1%7BcontactId%7D/patch/responses/404"
          },
          "500": {
            "$ref": "#/paths/~1contacts/get/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
